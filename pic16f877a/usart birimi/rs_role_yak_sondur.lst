CCS PCM C Compiler, Version 4.074, 13730               29-May-09 16:16

               Filename: C:\Documents and Settings\raj x\Desktop\atmproj\pic prog\rs_role_yak_sondur.lst

               ROM used: 162 words (2%)
                         Largest free fragment is 2048
               RAM used: 15 (4%) at main() level
                         15 (4%) worst case
               Stack:    1 worst case (0 in main + 1 for interrupts)

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   051
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  MOVF   7B,W
0016:  MOVWF  27
0017:  BCF    03.7
0018:  BCF    03.5
0019:  MOVLW  8C
001A:  MOVWF  04
001B:  BTFSS  00.5
001C:  GOTO   01F
001D:  BTFSC  0C.5
001E:  GOTO   032
001F:  MOVF   22,W
0020:  MOVWF  04
0021:  MOVF   23,W
0022:  MOVWF  77
0023:  MOVF   24,W
0024:  MOVWF  78
0025:  MOVF   25,W
0026:  MOVWF  79
0027:  MOVF   26,W
0028:  MOVWF  7A
0029:  MOVF   27,W
002A:  MOVWF  7B
002B:  MOVF   20,W
002C:  MOVWF  0A
002D:  SWAPF  21,W
002E:  MOVWF  03
002F:  SWAPF  7F,F
0030:  SWAPF  7F,W
0031:  RETFIE
0032:  BCF    0A.3
0033:  BCF    0A.4
0034:  GOTO   035
.................... //rs232 alýcý uygulamsý pic16f877 - atmproj 
.................... //29.06.2009 
.................... //yazan = Remzi ÞAHÝNOÐLU 
.................... #if defined (__PCM__) 
.................... #include <16F877.h> 
.................... //////// Standard Header file for the PIC16F877 device //////////////// 
.................... #device PIC16F877 
.................... #list 
....................  
.................... #fuses XT,NOWDT,NOPROTECT,NOLVP,NOBROWNOUT,NOPUT,NOWRT,NODEBUG,NOCPD 
.................... #use delay(clock=4000000) 
....................  
.................... #use rs232(baud=1200, xmit=pin_C6, rcv=pin_C7, parity=N, stop=1) 
.................... #endif 
....................  
.................... #byte data = 0x30 
....................  
.................... #int_rda       //RX ucuna veri gelince meydan gelen kesme 
.................... void serihaberlesme_kesmesi () 
.................... { 
....................    disable_interrupts(int_rda); 
*
0035:  BSF    03.5
0036:  BCF    0C.5
....................    output_high(pin_c5); 
0037:  BCF    03.5
0038:  BCF    28.5
0039:  MOVF   28,W
003A:  BSF    03.5
003B:  MOVWF  07
003C:  BCF    03.5
003D:  BSF    07.5
....................    data = getc();          // veriyi al data ya çak 
003E:  BTFSS  0C.5
003F:  GOTO   03E
0040:  MOVF   1A,W
0041:  MOVWF  30
....................    output_d(data); 
0042:  BSF    03.5
0043:  CLRF   08
0044:  BCF    03.5
0045:  MOVF   30,W
0046:  MOVWF  08
....................    output_low(pin_c5); 
0047:  BCF    28.5
0048:  MOVF   28,W
0049:  BSF    03.5
004A:  MOVWF  07
004B:  BCF    03.5
004C:  BCF    07.5
.................... } 
....................  
004D:  BCF    0C.5
004E:  BCF    0A.3
004F:  BCF    0A.4
0050:  GOTO   01F
.................... void main() 
.................... { 
0051:  CLRF   04
0052:  BCF    03.7
0053:  MOVLW  1F
0054:  ANDWF  03,F
0055:  MOVLW  33
0056:  BSF    03.5
0057:  MOVWF  19
0058:  MOVLW  A2
0059:  MOVWF  18
005A:  MOVLW  90
005B:  BCF    03.5
005C:  MOVWF  18
005D:  BSF    03.5
005E:  BSF    1F.0
005F:  BSF    1F.1
0060:  BSF    1F.2
0061:  BCF    1F.3
....................    setup_psp(PSP_DISABLED); 
*
0065:  BSF    03.5
0066:  BCF    09.4
....................    setup_spi(SPI_SS_DISABLED); 
0067:  BCF    03.5
0068:  BCF    14.5
0069:  BCF    28.5
006A:  MOVF   28,W
006B:  BSF    03.5
006C:  MOVWF  07
006D:  BCF    03.5
006E:  BSF    28.4
006F:  MOVF   28,W
0070:  BSF    03.5
0071:  MOVWF  07
0072:  BCF    03.5
0073:  BCF    28.3
0074:  MOVF   28,W
0075:  BSF    03.5
0076:  MOVWF  07
0077:  MOVLW  01
0078:  BCF    03.5
0079:  MOVWF  14
007A:  MOVLW  00
007B:  BSF    03.5
007C:  MOVWF  14
....................    setup_timer_1(T1_DISABLED); 
007D:  BCF    03.5
007E:  CLRF   10
....................    setup_timer_2(T2_DISABLED,0,1); 
007F:  MOVWF  78
0080:  MOVWF  12
0081:  MOVLW  00
0082:  BSF    03.5
0083:  MOVWF  12
....................    setup_adc_ports(NO_ANALOGS); 
0084:  BSF    1F.0
0085:  BSF    1F.1
0086:  BSF    1F.2
0087:  BCF    1F.3
....................    setup_adc(ADC_OFF); 
0088:  BCF    03.5
0089:  BCF    1F.0
....................    setup_CCP1(CCP_OFF); 
008A:  BSF    28.2
008B:  MOVF   28,W
008C:  BSF    03.5
008D:  MOVWF  07
008E:  BCF    03.5
008F:  CLRF   17
....................    setup_CCP2(CCP_OFF); 
0090:  BSF    28.1
0091:  MOVF   28,W
0092:  BSF    03.5
0093:  MOVWF  07
0094:  BCF    03.5
0095:  CLRF   1D
....................     
....................    output_low(pin_c5); 
0096:  BCF    28.5
0097:  MOVF   28,W
0098:  BSF    03.5
0099:  MOVWF  07
009A:  BCF    03.5
009B:  BCF    07.5
....................     
....................    enable_interrupts(GLOBAL);   // aktif edilen tüm kesmelere izin ver 
009C:  MOVLW  C0
009D:  IORWF  0B,F
....................     
....................    while(TRUE)       // sonsuz döngü 
....................    { 
....................       enable_interrupts(int_rda);      //veri alma kesmesi aktif 
009E:  BSF    03.5
009F:  BSF    0C.5
....................     
....................     
....................    } 
00A0:  GOTO   09F
....................     
....................     
....................     
....................     
.................... } 
....................  
....................  
00A1:  SLEEP

Configuration Fuses:
   Word  1: 3F39   XT NOWDT NOPUT NOPROTECT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG
