CCS PCM C Compiler, Version 4.074, 13730               30-May-09 22:40

               Filename: C:\Documents and Settings\raj x\Desktop\atmproj\pic prog\pic_pc_pc_pic.lst

               ROM used: 222 words (3%)
                         Largest free fragment is 2048
               RAM used: 16 (4%) at main() level
                         17 (5%) worst case
               Stack:    2 worst case (1 in main + 1 for interrupts)

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   066
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  MOVF   7B,W
0016:  MOVWF  27
0017:  BCF    03.7
0018:  BCF    03.5
0019:  MOVLW  8C
001A:  MOVWF  04
001B:  BTFSS  00.5
001C:  GOTO   01F
001D:  BTFSC  0C.5
001E:  GOTO   032
001F:  MOVF   22,W
0020:  MOVWF  04
0021:  MOVF   23,W
0022:  MOVWF  77
0023:  MOVF   24,W
0024:  MOVWF  78
0025:  MOVF   25,W
0026:  MOVWF  79
0027:  MOVF   26,W
0028:  MOVWF  7A
0029:  MOVF   27,W
002A:  MOVWF  7B
002B:  MOVF   20,W
002C:  MOVWF  0A
002D:  SWAPF  21,W
002E:  MOVWF  03
002F:  SWAPF  7F,F
0030:  SWAPF  7F,W
0031:  RETFIE
0032:  BCF    0A.3
0033:  BCF    0A.4
0034:  GOTO   035
.................... //rs232 alýcý-verici uygulamsý pic16f877 - atmproj 
.................... //30.06.2009 
.................... //yazan = Remzi ÞAHÝNOÐLU 
.................... #if defined (__PCM__) 
.................... #include <16F877.h> 
.................... //////// Standard Header file for the PIC16F877 device //////////////// 
.................... #device PIC16F877 
.................... #list 
....................  
.................... #fuses XT,NOWDT,NOPROTECT,NOLVP,NOBROWNOUT,NOPUT,NOWRT,NODEBUG,NOCPD 
.................... #use delay(clock=4000000) 
*
0051:  MOVLW  2A
0052:  MOVWF  04
0053:  BCF    03.7
0054:  MOVF   00,W
0055:  BTFSC  03.2
0056:  GOTO   065
0057:  MOVLW  01
0058:  MOVWF  78
0059:  CLRF   77
005A:  DECFSZ 77,F
005B:  GOTO   05A
005C:  DECFSZ 78,F
005D:  GOTO   059
005E:  MOVLW  4A
005F:  MOVWF  77
0060:  DECFSZ 77,F
0061:  GOTO   060
0062:  GOTO   063
0063:  DECFSZ 00,F
0064:  GOTO   057
0065:  RETLW  00
....................  
.................... #use rs232(baud=1200, xmit=pin_C6, rcv=pin_C7, parity=N, stop=1) 
.................... #endif 
....................  
.................... #byte porta = 0x05 
.................... #byte data = 0x30 
....................  
.................... #int_rda  
.................... void serihaberlesme_kesmesi () 
.................... { 
....................    disable_interrupts(int_rda); 
*
0035:  BSF    03.5
0036:  BCF    0C.5
....................    output_high(pin_c5); 
0037:  BCF    03.5
0038:  BCF    28.5
0039:  MOVF   28,W
003A:  BSF    03.5
003B:  MOVWF  07
003C:  BCF    03.5
003D:  BSF    07.5
....................    data = getc();                      // veriyi al data ya çak 
003E:  BTFSS  0C.5
003F:  GOTO   03E
0040:  MOVF   1A,W
0041:  MOVWF  30
....................    output_d(data); 
0042:  BSF    03.5
0043:  CLRF   08
0044:  BCF    03.5
0045:  MOVF   30,W
0046:  MOVWF  08
....................    output_low(pin_c5); 
0047:  BCF    28.5
0048:  MOVF   28,W
0049:  BSF    03.5
004A:  MOVWF  07
004B:  BCF    03.5
004C:  BCF    07.5
.................... } 
....................  
004D:  BCF    0C.5
004E:  BCF    0A.3
004F:  BCF    0A.4
0050:  GOTO   01F
.................... void main() 
.................... { 
*
0066:  CLRF   04
0067:  BCF    03.7
0068:  MOVLW  1F
0069:  ANDWF  03,F
006A:  MOVLW  33
006B:  BSF    03.5
006C:  MOVWF  19
006D:  MOVLW  A2
006E:  MOVWF  18
006F:  MOVLW  90
0070:  BCF    03.5
0071:  MOVWF  18
0072:  BSF    03.5
0073:  BSF    1F.0
0074:  BSF    1F.1
0075:  BSF    1F.2
0076:  BCF    1F.3
....................    set_tris_a(0b00000001); 
*
007A:  MOVLW  01
007B:  BSF    03.5
007C:  MOVWF  05
....................     
....................    setup_psp(PSP_DISABLED); 
007D:  BCF    09.4
....................    setup_spi(SPI_SS_DISABLED); 
007E:  BCF    03.5
007F:  BCF    14.5
0080:  BCF    28.5
0081:  MOVF   28,W
0082:  BSF    03.5
0083:  MOVWF  07
0084:  BCF    03.5
0085:  BSF    28.4
0086:  MOVF   28,W
0087:  BSF    03.5
0088:  MOVWF  07
0089:  BCF    03.5
008A:  BCF    28.3
008B:  MOVF   28,W
008C:  BSF    03.5
008D:  MOVWF  07
008E:  MOVLW  01
008F:  BCF    03.5
0090:  MOVWF  14
0091:  MOVLW  00
0092:  BSF    03.5
0093:  MOVWF  14
....................    setup_timer_1(T1_DISABLED); 
0094:  BCF    03.5
0095:  CLRF   10
....................    setup_timer_2(T2_DISABLED,0,1); 
0096:  MOVWF  78
0097:  MOVWF  12
0098:  MOVLW  00
0099:  BSF    03.5
009A:  MOVWF  12
....................    setup_adc_ports(NO_ANALOGS); 
009B:  BSF    1F.0
009C:  BSF    1F.1
009D:  BSF    1F.2
009E:  BCF    1F.3
....................    setup_adc(ADC_OFF); 
009F:  BCF    03.5
00A0:  BCF    1F.0
....................    setup_CCP1(CCP_OFF); 
00A1:  BSF    28.2
00A2:  MOVF   28,W
00A3:  BSF    03.5
00A4:  MOVWF  07
00A5:  BCF    03.5
00A6:  CLRF   17
....................    setup_CCP2(CCP_OFF); 
00A7:  BSF    28.1
00A8:  MOVF   28,W
00A9:  BSF    03.5
00AA:  MOVWF  07
00AB:  BCF    03.5
00AC:  CLRF   1D
....................     
....................    output_low(pin_c5); 
00AD:  BCF    28.5
00AE:  MOVF   28,W
00AF:  BSF    03.5
00B0:  MOVWF  07
00B1:  BCF    03.5
00B2:  BCF    07.5
....................     
....................    enable_interrupts(GLOBAL);          // aktif edilen tüm kesmelere izin ver 
00B3:  MOVLW  C0
00B4:  IORWF  0B,F
....................       
....................    delay_ms(500); 
00B5:  MOVLW  02
00B6:  MOVWF  29
00B7:  MOVLW  FA
00B8:  MOVWF  2A
00B9:  CALL   051
00BA:  DECFSZ 29,F
00BB:  GOTO   0B7
....................    output_d(0); 
00BC:  BSF    03.5
00BD:  CLRF   08
00BE:  BCF    03.5
00BF:  CLRF   08
....................     
....................    while(TRUE) 
....................    { 
....................       enable_interrupts(int_rda);      // veri alma kesmesi aktif    
00C0:  BSF    03.5
00C1:  BSF    0C.5
....................           
....................       if(bit_test(porta,0)==0)         // RA0 ý kontrol et basýlý ise   
00C2:  BCF    03.5
00C3:  BTFSC  05.0
00C4:  GOTO   0D9
....................       {                                // veriyi gönder 
....................          putc('R'); 
00C5:  MOVLW  52
00C6:  BTFSS  0C.4
00C7:  GOTO   0C6
00C8:  MOVWF  19
....................          putc('E'); 
00C9:  MOVLW  45
00CA:  BTFSS  0C.4
00CB:  GOTO   0CA
00CC:  MOVWF  19
....................          putc('M'); 
00CD:  MOVLW  4D
00CE:  BTFSS  0C.4
00CF:  GOTO   0CE
00D0:  MOVWF  19
....................          putc('Z'); 
00D1:  MOVLW  5A
00D2:  BTFSS  0C.4
00D3:  GOTO   0D2
00D4:  MOVWF  19
....................          putc('I');         
00D5:  MOVLW  49
00D6:  BTFSS  0C.4
00D7:  GOTO   0D6
00D8:  MOVWF  19
....................       } 
....................       delay_ms(100); 
00D9:  MOVLW  64
00DA:  MOVWF  2A
00DB:  CALL   051
....................    } 
00DC:  GOTO   0C0
.................... } 
....................  
00DD:  SLEEP

Configuration Fuses:
   Word  1: 3F39   XT NOWDT NOPUT NOPROTECT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG
