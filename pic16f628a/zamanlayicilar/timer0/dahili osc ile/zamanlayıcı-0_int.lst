CCS PCM C Compiler, Version 4.018, 12203               20-Þub-07 14:04

               Filename: D:\pic\zamanlayicilar\timer0\dahili osc ile\zamanlayýcý-0_int.lst

               ROM used: 124 words (6%)
                         Largest free fragment is 1924
               RAM used: 17 (8%) at main() level
                         17 (8%) worst case
               Stack:    1 worst case (0 in main + 1 for interrupts)

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   047
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   7F,W
0009:  MOVWF  20
000A:  MOVF   0A,W
000B:  MOVWF  28
000C:  CLRF   0A
000D:  SWAPF  20,F
000E:  MOVF   04,W
000F:  MOVWF  22
0010:  MOVF   77,W
0011:  MOVWF  23
0012:  MOVF   78,W
0013:  MOVWF  24
0014:  MOVF   79,W
0015:  MOVWF  25
0016:  MOVF   7A,W
0017:  MOVWF  26
0018:  MOVF   7B,W
0019:  MOVWF  27
001A:  BCF    03.7
001B:  BCF    03.5
001C:  BTFSS  0B.5
001D:  GOTO   020
001E:  BTFSC  0B.2
001F:  GOTO   033
0020:  MOVF   22,W
0021:  MOVWF  04
0022:  MOVF   23,W
0023:  MOVWF  77
0024:  MOVF   24,W
0025:  MOVWF  78
0026:  MOVF   25,W
0027:  MOVWF  79
0028:  MOVF   26,W
0029:  MOVWF  7A
002A:  MOVF   27,W
002B:  MOVWF  7B
002C:  MOVF   28,W
002D:  MOVWF  0A
002E:  SWAPF  21,W
002F:  MOVWF  03
0030:  SWAPF  7F,F
0031:  SWAPF  7F,W
0032:  RETFIE
.................... //Zamanlayýcý-0 (TMR0) dahili kaynak ile uygulamasý 
.................... //19.02.2007 
.................... //yazan = Remzi ÞAHÝNOÐLU 
.................... // 
.................... //TMR0 zamanlayýcýsýný kullanarak 1 sn lik bekleme yapmak 
.................... // 
.................... #if defined (__PCM__) 
.................... #include <16F628A.h> 
.................... //////// Standard Header file for the PIC16F628A device //////////////// 
.................... #device PIC16F628A 
.................... #list 
....................  
.................... #use delay(clock=4000000) 
.................... #fuses NOWDT,PUT,NOLVP,NOBROWNOUT,MCLR,INTRC_IO,NOPROTECT 
.................... #endif 
....................  
.................... #byte OPTION = 0x81 
.................... #byte INTCON = 0x0B 
....................  
.................... char i=0, a=0; 
*
004D:  CLRF   29
004E:  CLRF   2A
....................  
.................... #INT_TIMER0 
.................... void timer0() 
.................... {       
....................    bit_clear(INTCON,2);      // TMR0 kesmesini tekrar kullanýlmasý için sýfýrlandý 
*
0033:  BCF    0B.2
....................    set_timer0(217);          // TMRO saklayýcýsýna 217 degeri yüklendi 
0034:  MOVLW  D9
0035:  MOVWF  01
....................                              // bu deger ön bölücü degeri ayarlandýgýnda 10ms denk gelir  
....................    i=i+1;                   
0036:  MOVLW  01
0037:  ADDWF  29,F
....................    if(i==100)                // bu döngüde 10ms 100 kere sayýlýp 1sn elde edilir. 
0038:  MOVF   29,W
0039:  SUBLW  64
003A:  BTFSS  03.2
003B:  GOTO   044
....................    {       
....................       i=0;       
003C:  CLRF   29
....................       if(a==0)               // burada led 1 ise 0 yapýlýr, 0 ise 1 yapýlýr 
003D:  MOVF   2A,F
003E:  BTFSS  03.2
003F:  GOTO   043
....................       {a=1;} 
0040:  MOVLW  01
0041:  MOVWF  2A
....................       else 
0042:  GOTO   044
....................       {a=0;}                
0043:  CLRF   2A
....................    } 
.................... } 
....................  
0044:  BCF    0B.2
0045:  BCF    0A.3
0046:  GOTO   020
.................... void main() 
.................... {    
0047:  CLRF   04
0048:  BCF    03.7
0049:  MOVLW  1F
004A:  ANDWF  03,F
004B:  MOVLW  07
004C:  MOVWF  1F
....................    set_timer0(217); 
*
004F:  MOVLW  D9
0050:  MOVWF  01
....................    setup_counters( RTCC_INTERNAL, RTCC_DIV_256 ); 
0051:  MOVLW  07
0052:  MOVWF  77
0053:  BTFSS  77.3
0054:  GOTO   05E
0055:  MOVLW  07
0056:  CLRF   01
0057:  MOVLW  81
0058:  MOVWF  04
0059:  BCF    03.7
005A:  MOVF   00,W
005B:  ANDLW  C0
005C:  IORLW  0F
005D:  MOVWF  00
005E:  CLRWDT
005F:  MOVLW  81
0060:  MOVWF  04
0061:  MOVF   00,W
0062:  ANDLW  C0
0063:  IORWF  77,W
0064:  MOVWF  00
....................    enable_interrupts(INT_RTCC); 
0065:  BSF    0B.5
....................    enable_interrupts(GLOBAL); 
0066:  MOVLW  C0
0067:  IORWF  0B,F
....................     
....................     
.................... //   set_timer0(217);           // TMR0 registerine parantez içindeki degeri yükler. 
.................... //   OPTION = 87;               // ön bölücü oraný 1:256 
.................... //   INTCON = 0xA0;             // tmr0 kesmesine ve kesmeyi aktif et  
....................     
.................... bas:    
....................    switch(a) 
....................    {    
0068:  MOVF   2A,W
0069:  BTFSC  03.2
006A:  GOTO   06F
006B:  XORLW  01
006C:  BTFSC  03.2
006D:  GOTO   074
006E:  GOTO   07A
....................    case 0: output_b(0); break; 
006F:  BSF    03.5
0070:  CLRF   06
0071:  BCF    03.5
0072:  CLRF   06
0073:  GOTO   07A
....................    case 1: output_b(1); break;     
0074:  BSF    03.5
0075:  CLRF   06
0076:  MOVLW  01
0077:  BCF    03.5
0078:  MOVWF  06
0079:  GOTO   07A
....................    } 
....................    goto bas; 
007A:  GOTO   068
.................... } 
....................  
....................  
007B:  SLEEP

Configuration Fuses:
   Word  1: 3F30   NOWDT PUT NOPROTECT NOBROWNOUT MCLR NOLVP INTRC_IO NOCPD
