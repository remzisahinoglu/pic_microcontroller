CCS PCM C Compiler, Version 4.106, 14749               18-Mar-11 15:44

               Filename: D:\ram\parellel robot\elektronik\step motor kontrol\adým ileri geri\adým_ileri_geri.lst

               ROM used: 211 words (10%)
                         Largest free fragment is 1837
               RAM used: 9 (4%) at main() level
                         10 (4%) worst case
               Stack:    1 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   019
0003:  NOP
.................... //unipolar step motor belirlenen kadar adým ileri geri kontrol uygulamasý 
.................... //18.03.2011 
.................... //yazan = Remzi ÞAHÝNOÐLU 
....................  
.................... #if defined (__PCM__) 
.................... #include <16F628A.h> 
.................... //////// Standard Header file for the PIC16F628A device //////////////// 
.................... #device PIC16F628A 
.................... #list 
....................  
.................... #use delay(clock=4000000) 
*
0004:  MOVLW  24
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   018
000A:  MOVLW  01
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  4A
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  GOTO   016
0016:  DECFSZ 00,F
0017:  GOTO   00A
0018:  RETURN
.................... #fuses NOWDT,PUT,NOLVP,NOBROWNOUT,NOMCLR,INTRC_IO,NOPROTECT 
.................... #endif 
....................  
.................... #byte PORTA = 0x05 
.................... char i=0; 
.................... int16 a=0; 
....................  
....................  
.................... void main() 
.................... {   
0019:  CLRF   04
001A:  BCF    03.7
001B:  MOVLW  1F
001C:  ANDWF  03,F
001D:  CLRF   20
001E:  CLRF   22
001F:  CLRF   21
0020:  MOVLW  07
0021:  MOVWF  1F
....................    delay_ms(2000); 
0022:  MOVLW  08
0023:  MOVWF  23
0024:  MOVLW  FA
0025:  MOVWF  24
0026:  CALL   004
0027:  DECFSZ 23,F
0028:  GOTO   024
....................    while(TRUE)  
....................    { 
....................       output_b(0b00010000); 
0029:  BSF    03.5
002A:  CLRF   06
002B:  MOVLW  10
002C:  BCF    03.5
002D:  MOVWF  06
....................        
....................       dur: 
....................       if(bit_test(PORTA,0)==0)   // Start 
002E:  BTFSC  05.0
002F:  GOTO   0C1
....................       { 
....................              
....................          //************  2 tur ileri 30ms          
....................          a=0; 
0030:  CLRF   22
0031:  CLRF   21
....................          while(a<2640)     // bu kadar adým git 
....................          { 
0032:  MOVF   22,W
0033:  SUBLW  0A
0034:  BTFSS  03.0
0035:  GOTO   072
0036:  BTFSS  03.2
0037:  GOTO   03C
0038:  MOVF   21,W
0039:  SUBLW  4F
003A:  BTFSS  03.0
003B:  GOTO   072
....................             i=i+1;                  // adým sayacý 
003C:  MOVLW  01
003D:  ADDWF  20,F
....................             if(i==5){i=1;} 
003E:  MOVF   20,W
003F:  SUBLW  05
0040:  BTFSS  03.2
0041:  GOTO   044
0042:  MOVLW  01
0043:  MOVWF  20
....................             switch (i)                  
....................             {                           
0044:  MOVLW  01
0045:  SUBWF  20,W
0046:  ADDLW  FC
0047:  BTFSC  03.0
0048:  GOTO   063
0049:  ADDLW  04
004A:  GOTO   0C3
....................                case 1: output_b(1);   break;   // aþama 1 
004B:  BSF    03.5
004C:  CLRF   06
004D:  MOVLW  01
004E:  BCF    03.5
004F:  MOVWF  06
0050:  GOTO   063
....................                case 2: output_b(2);   break;   // aþama 2 
0051:  BSF    03.5
0052:  CLRF   06
0053:  MOVLW  02
0054:  BCF    03.5
0055:  MOVWF  06
0056:  GOTO   063
....................                case 3: output_b(4);   break;   // aþama 3 
0057:  BSF    03.5
0058:  CLRF   06
0059:  MOVLW  04
005A:  BCF    03.5
005B:  MOVWF  06
005C:  GOTO   063
....................                case 4: output_b(8);   break;   // aþama 4 
005D:  BSF    03.5
005E:  CLRF   06
005F:  MOVLW  08
0060:  BCF    03.5
0061:  MOVWF  06
0062:  GOTO   063
....................             } 
....................             delay_ms(15); 
0063:  MOVLW  0F
0064:  MOVWF  24
0065:  CALL   004
....................             a=a+1; 
0066:  MOVLW  01
0067:  ADDWF  21,F
0068:  BTFSC  03.0
0069:  INCF   22,F
....................             if(bit_test(PORTA,1)==0){goto dur; output_b(0);} 
006A:  BTFSC  05.1
006B:  GOTO   071
006C:  GOTO   02E
006D:  BSF    03.5
006E:  CLRF   06
006F:  BCF    03.5
0070:  CLRF   06
....................          } 
0071:  GOTO   032
....................          delay_ms(1000); 
0072:  MOVLW  04
0073:  MOVWF  23
0074:  MOVLW  FA
0075:  MOVWF  24
0076:  CALL   004
0077:  DECFSZ 23,F
0078:  GOTO   074
....................          //************  2 tur geri 30ms 
....................          a=0; 
0079:  CLRF   22
007A:  CLRF   21
....................          while(a<2640)     // bu kadar adým git 
....................          { 
007B:  MOVF   22,W
007C:  SUBLW  0A
007D:  BTFSS  03.0
007E:  GOTO   0BA
007F:  BTFSS  03.2
0080:  GOTO   085
0081:  MOVF   21,W
0082:  SUBLW  4F
0083:  BTFSS  03.0
0084:  GOTO   0BA
....................             i=i-1;                  // adým sayacý 
0085:  MOVLW  01
0086:  SUBWF  20,F
....................             if(i==0){i=4;} 
0087:  MOVF   20,F
0088:  BTFSS  03.2
0089:  GOTO   08C
008A:  MOVLW  04
008B:  MOVWF  20
....................             switch (i)                  
....................             {                           
008C:  MOVLW  01
008D:  SUBWF  20,W
008E:  ADDLW  FC
008F:  BTFSC  03.0
0090:  GOTO   0AB
0091:  ADDLW  04
0092:  GOTO   0CB
....................                case 1: output_b(1);   break;   // aþama 1 
0093:  BSF    03.5
0094:  CLRF   06
0095:  MOVLW  01
0096:  BCF    03.5
0097:  MOVWF  06
0098:  GOTO   0AB
....................                case 2: output_b(2);   break;   // aþama 2 
0099:  BSF    03.5
009A:  CLRF   06
009B:  MOVLW  02
009C:  BCF    03.5
009D:  MOVWF  06
009E:  GOTO   0AB
....................                case 3: output_b(4);   break;   // aþama 3 
009F:  BSF    03.5
00A0:  CLRF   06
00A1:  MOVLW  04
00A2:  BCF    03.5
00A3:  MOVWF  06
00A4:  GOTO   0AB
....................                case 4: output_b(8);   break;   // aþama 4 
00A5:  BSF    03.5
00A6:  CLRF   06
00A7:  MOVLW  08
00A8:  BCF    03.5
00A9:  MOVWF  06
00AA:  GOTO   0AB
....................             } 
....................             delay_ms(15); 
00AB:  MOVLW  0F
00AC:  MOVWF  24
00AD:  CALL   004
....................             a=a+1; 
00AE:  MOVLW  01
00AF:  ADDWF  21,F
00B0:  BTFSC  03.0
00B1:  INCF   22,F
....................             if(bit_test(PORTA,1)==0){goto dur; output_b(0);} 
00B2:  BTFSC  05.1
00B3:  GOTO   0B9
00B4:  GOTO   02E
00B5:  BSF    03.5
00B6:  CLRF   06
00B7:  BCF    03.5
00B8:  CLRF   06
....................          } 
00B9:  GOTO   07B
....................          delay_ms(1000); 
00BA:  MOVLW  04
00BB:  MOVWF  23
00BC:  MOVLW  FA
00BD:  MOVWF  24
00BE:  CALL   004
00BF:  DECFSZ 23,F
00C0:  GOTO   0BC
....................       } 
....................    } 
00C1:  GOTO   029
.................... } 
00C2:  SLEEP

Configuration Fuses:
   Word  1: 3F10   NOWDT PUT NOPROTECT NOBROWNOUT NOMCLR NOLVP INTRC_IO NOCPD
