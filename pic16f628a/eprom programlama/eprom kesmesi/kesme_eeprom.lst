CCS PCM C Compiler, Version 4.018, 19894               28-Nis-07 15:46

               Filename: C:\pic\pic16f628a\eprom programlama\eprom kesmesi\kesme_eeprom.lst

               ROM used: 144 words (7%)
                         Largest free fragment is 1904
               RAM used: 19 (8%) at main() level
                         19 (8%) worst case
               Stack:    2 worst case (1 in main + 1 for interrupts)

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   04F
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   7F,W
0009:  MOVWF  20
000A:  MOVF   0A,W
000B:  MOVWF  28
000C:  CLRF   0A
000D:  SWAPF  20,F
000E:  MOVF   04,W
000F:  MOVWF  22
0010:  MOVF   77,W
0011:  MOVWF  23
0012:  MOVF   78,W
0013:  MOVWF  24
0014:  MOVF   79,W
0015:  MOVWF  25
0016:  MOVF   7A,W
0017:  MOVWF  26
0018:  MOVF   7B,W
0019:  MOVWF  27
001A:  BCF    03.7
001B:  BCF    03.5
001C:  MOVLW  8C
001D:  MOVWF  04
001E:  BTFSS  00.7
001F:  GOTO   022
0020:  BTFSC  0C.7
0021:  GOTO   035
0022:  MOVF   22,W
0023:  MOVWF  04
0024:  MOVF   23,W
0025:  MOVWF  77
0026:  MOVF   24,W
0027:  MOVWF  78
0028:  MOVF   25,W
0029:  MOVWF  79
002A:  MOVF   26,W
002B:  MOVWF  7A
002C:  MOVF   27,W
002D:  MOVWF  7B
002E:  MOVF   28,W
002F:  MOVWF  0A
0030:  SWAPF  21,W
0031:  MOVWF  03
0032:  SWAPF  7F,F
0033:  SWAPF  7F,W
0034:  RETFIE
.................... //eeprom veri yazma ve okuma uygulamsý 
.................... //22.04.2007 
.................... //yazan = Remzi ÞAHÝNOÐLU 
.................... // pic 16f628a' nýn 128byte lýk eeprým veri belleði vardýr 
.................... #if defined (__PCM__) 
.................... #include <16F628A.h> 
.................... //////// Standard Header file for the PIC16F628A device //////////////// 
.................... #device PIC16F628A 
.................... #list 
....................  
.................... #use delay(clock=4000000) 
*
003A:  MOVLW  2C
003B:  MOVWF  04
003C:  BCF    03.7
003D:  MOVF   00,W
003E:  BTFSC  03.2
003F:  GOTO   04E
0040:  MOVLW  01
0041:  MOVWF  78
0042:  CLRF   77
0043:  DECFSZ 77,F
0044:  GOTO   043
0045:  DECFSZ 78,F
0046:  GOTO   042
0047:  MOVLW  4A
0048:  MOVWF  77
0049:  DECFSZ 77,F
004A:  GOTO   049
004B:  GOTO   04C
004C:  DECFSZ 00,F
004D:  GOTO   040
004E:  GOTO   063 (RETURN)
.................... #fuses NOWDT,PUT,NOLVP,NOBROWNOUT,MCLR,INTRC_IO,NOPROTECT 
.................... #endif 
....................  
.................... #byte PORTA = 0x05 
.................... #byte PORTB = 0x06 
....................  
.................... char veri=0, say=0, artma=500; 
*
0055:  CLRF   29
0056:  CLRF   2A
0057:  MOVLW  F4
0058:  MOVWF  2B
....................  
.................... #int_eeprom         // eproma yazma tamamlandýðý zaman program akýþý buradan devam eder 
.................... void eprom_yaz() 
.................... { 
....................    artma=artma-10;   // sayma hýzýný arttýr geçikem süresini azaldýðý için 
*
0035:  MOVLW  0A
0036:  SUBWF  2B,F
.................... } 
....................   
0037:  BCF    0C.7
0038:  BCF    0A.3
0039:  GOTO   022
.................... void main() 
.................... { 
*
004F:  CLRF   04
0050:  BCF    03.7
0051:  MOVLW  1F
0052:  ANDWF  03,F
0053:  MOVLW  07
0054:  MOVWF  1F
....................    enable_interrupts(global); 
*
0059:  MOVLW  C0
005A:  IORWF  0B,F
....................    enable_interrupts(int_eeprom); 
005B:  BSF    03.5
005C:  BSF    0C.7
....................     
....................    do 
....................    { 
....................       say=say+1;                       // normal program akýþý 
005D:  MOVLW  01
005E:  BCF    03.5
005F:  ADDWF  2A,F
....................       delay_ms(artma); 
0060:  MOVF   2B,W
0061:  MOVWF  2C
0062:  GOTO   03A
....................       output_b(say); 
0063:  BSF    03.5
0064:  CLRF   06
0065:  BCF    03.5
0066:  MOVF   2A,W
0067:  MOVWF  06
....................        
....................        
....................       if(bit_test(PORTA,0)==0)         // veriyi yaz 
0068:  BTFSC  05.0
0069:  GOTO   07F
....................       {write_eeprom(0x00, 0x0F);}      // 0x00 adresine 0x0F bilgisini yaz 
006A:  BSF    03.5
006B:  CLRF   1B
006C:  MOVLW  0F
006D:  MOVWF  1A
006E:  BSF    1C.2
006F:  BCF    03.5
0070:  MOVF   0B,W
0071:  MOVWF  77
0072:  BCF    0B.7
0073:  BSF    03.5
0074:  MOVLW  55
0075:  MOVWF  1D
0076:  MOVLW  AA
0077:  MOVWF  1D
0078:  BSF    1C.1
0079:  BTFSC  1C.1
007A:  GOTO   079
007B:  BCF    1C.2
007C:  MOVF   77,W
007D:  BCF    03.5
007E:  IORWF  0B,F
....................                                        // enerjiyi kesseniz dahi bilgi silme komutu gelemdiði taktirdeadreste kalacaktýr 
....................        
....................       if(bit_test(PORTA,2)==0)         // veriyi oku 
007F:  BTFSC  05.2
0080:  GOTO   08D
....................       { 
....................          veri = read_eeprom (0x00);    // 0x00 adresini oku      ilk adres 0.byte 
0081:  BSF    03.5
0082:  CLRF   1B
0083:  BCF    1C.7
0084:  BSF    1C.0
0085:  MOVF   1A,W
0086:  BCF    03.5
0087:  MOVWF  29
....................          output_b(veri);               // ve portb ye gönder 
0088:  BSF    03.5
0089:  CLRF   06
008A:  BCF    03.5
008B:  MOVF   29,W
008C:  MOVWF  06
....................       } 
....................        
....................    }while(TRUE);                       // sonsuz dögü 
.................... } 
008D:  BSF    03.5
008E:  GOTO   05D
....................  
008F:  SLEEP

Configuration Fuses:
   Word  1: 3F30   NOWDT PUT NOPROTECT NOBROWNOUT MCLR NOLVP INTRC_IO NOCPD
