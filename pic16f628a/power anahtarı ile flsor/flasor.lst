CCS PCM C Compiler, Version 4.106, 59651               28-Haz-12 14:53

               Filename: D:\ram\microcontrol\picmicro\pic c\pic uygulama\pic16f628a\power anahtarý ile flsor\flasor.lst

               ROM used: 344 words (17%)
                         Largest free fragment is 1704
               RAM used: 7 (3%) at main() level
                         8 (4%) worst case
               Stack:    1 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   019
0003:  NOP
.................... //power butonu ile çok durumlu flosr uygulamasý 
.................... //28.06.2012 
.................... //yazan = Remzi ÞAHÝNOÐLU 
....................  
.................... #if defined (__PCM__) 
.................... #include <16F628A.h> 
.................... //////// Standard Header file for the PIC16F628A device //////////////// 
.................... #device PIC16F628A 
.................... #list 
....................  
.................... #use delay(clock=4000000) 
*
0004:  MOVLW  22
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   018
000A:  MOVLW  01
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  4A
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  GOTO   016
0016:  DECFSZ 00,F
0017:  GOTO   00A
0018:  RETURN
.................... #fuses NOWDT,PUT,NOLVP,NOBROWNOUT,NOMCLR,INTRC_IO,NOPROTECT 
.................... #endif 
....................  
.................... char veri=0; 
....................  
.................... void main() 
.................... {  
0019:  CLRF   04
001A:  BCF    03.7
001B:  MOVLW  1F
001C:  ANDWF  03,F
001D:  CLRF   20
001E:  MOVLW  07
001F:  MOVWF  1F
....................    delay_ms(200); 
0020:  MOVLW  C8
0021:  MOVWF  22
0022:  CALL   004
....................    output_b(0); 
0023:  BSF    03.5
0024:  CLRF   06
0025:  BCF    03.5
0026:  CLRF   06
....................    output_a(0); 
0027:  BSF    03.5
0028:  CLRF   05
0029:  BCF    03.5
002A:  CLRF   05
....................     
....................    veri = read_eeprom(0);        // eprom belleginin 0. adresini oku 
002B:  BSF    03.5
002C:  CLRF   1B
002D:  BCF    1C.7
002E:  BSF    1C.0
002F:  MOVF   1A,W
0030:  BCF    03.5
0031:  MOVWF  20
....................    veri=veri+1; 
0032:  MOVLW  01
0033:  ADDWF  20,F
....................    if(veri > 5){veri=1;} 
0034:  MOVF   20,W
0035:  SUBLW  05
0036:  BTFSC  03.0
0037:  GOTO   03A
0038:  MOVLW  01
0039:  MOVWF  20
....................    write_eeprom(0, veri);        // eprom belleðinin 0. adresine veriyi yaz 
003A:  BSF    03.5
003B:  CLRF   1B
003C:  BCF    03.5
003D:  MOVF   20,W
003E:  BSF    03.5
003F:  MOVWF  1A
0040:  BSF    1C.2
0041:  BCF    03.5
0042:  MOVF   0B,W
0043:  MOVWF  77
0044:  BCF    0B.7
0045:  BSF    03.5
0046:  MOVLW  55
0047:  MOVWF  1D
0048:  MOVLW  AA
0049:  MOVWF  1D
004A:  BSF    1C.1
004B:  BTFSC  1C.1
004C:  GOTO   04B
004D:  BCF    1C.2
004E:  MOVF   77,W
004F:  BCF    03.5
0050:  IORWF  0B,F
....................     
....................    while(TRUE) 
....................    { 
....................       switch(veri) 
....................       { 
0051:  MOVLW  01
0052:  SUBWF  20,W
0053:  ADDLW  FB
0054:  BTFSC  03.0
0055:  GOTO   14D
0056:  ADDLW  05
0057:  GOTO   14F
....................          case 1:  output_high(PIN_B3);           // sürekli yan 
0058:  BSF    03.5
0059:  BCF    06.3
005A:  BCF    03.5
005B:  BSF    06.3
....................                   break; 
005C:  GOTO   14D
....................                                                      
....................          case 2:  output_high(PIN_B3);           // kesikli yan 
005D:  BSF    03.5
005E:  BCF    06.3
005F:  BCF    03.5
0060:  BSF    06.3
....................                   delay_ms(40); 
0061:  MOVLW  28
0062:  MOVWF  22
0063:  CALL   004
....................                   output_low(PIN_B3); 
0064:  BSF    03.5
0065:  BCF    06.3
0066:  BCF    03.5
0067:  BCF    06.3
....................                   delay_ms(60); 
0068:  MOVLW  3C
0069:  MOVWF  22
006A:  CALL   004
....................                    
....................                   output_high(PIN_B3); 
006B:  BSF    03.5
006C:  BCF    06.3
006D:  BCF    03.5
006E:  BSF    06.3
....................                   delay_ms(40); 
006F:  MOVLW  28
0070:  MOVWF  22
0071:  CALL   004
....................                   output_low(PIN_B3); 
0072:  BSF    03.5
0073:  BCF    06.3
0074:  BCF    03.5
0075:  BCF    06.3
....................                   delay_ms(60); 
0076:  MOVLW  3C
0077:  MOVWF  22
0078:  CALL   004
....................                    
....................                   output_high(PIN_B3); 
0079:  BSF    03.5
007A:  BCF    06.3
007B:  BCF    03.5
007C:  BSF    06.3
....................                   delay_ms(40); 
007D:  MOVLW  28
007E:  MOVWF  22
007F:  CALL   004
....................                   output_low(PIN_B3); 
0080:  BSF    03.5
0081:  BCF    06.3
0082:  BCF    03.5
0083:  BCF    06.3
....................                   delay_ms(500); 
0084:  MOVLW  02
0085:  MOVWF  21
0086:  MOVLW  FA
0087:  MOVWF  22
0088:  CALL   004
0089:  DECFSZ 21,F
008A:  GOTO   086
....................                   break; 
008B:  GOTO   14D
....................           
....................          case 3:  output_high(PIN_B3);           // kesikli yan-kýsa 
008C:  BSF    03.5
008D:  BCF    06.3
008E:  BCF    03.5
008F:  BSF    06.3
....................                   delay_ms(50); 
0090:  MOVLW  32
0091:  MOVWF  22
0092:  CALL   004
....................                   output_low(PIN_B3); 
0093:  BSF    03.5
0094:  BCF    06.3
0095:  BCF    03.5
0096:  BCF    06.3
....................                   delay_ms(500); 
0097:  MOVLW  02
0098:  MOVWF  21
0099:  MOVLW  FA
009A:  MOVWF  22
009B:  CALL   004
009C:  DECFSZ 21,F
009D:  GOTO   099
....................                   break; 
009E:  GOTO   14D
....................                    
....................          case 4:  output_high(PIN_B3); 
009F:  BSF    03.5
00A0:  BCF    06.3
00A1:  BCF    03.5
00A2:  BSF    06.3
....................                   delay_ms(100); 
00A3:  MOVLW  64
00A4:  MOVWF  22
00A5:  CALL   004
....................                   output_low(PIN_B3); 
00A6:  BSF    03.5
00A7:  BCF    06.3
00A8:  BCF    03.5
00A9:  BCF    06.3
....................                   delay_ms(200); 
00AA:  MOVLW  C8
00AB:  MOVWF  22
00AC:  CALL   004
....................                    
....................                   output_high(PIN_B3); 
00AD:  BSF    03.5
00AE:  BCF    06.3
00AF:  BCF    03.5
00B0:  BSF    06.3
....................                   delay_ms(100); 
00B1:  MOVLW  64
00B2:  MOVWF  22
00B3:  CALL   004
....................                   output_low(PIN_B3); 
00B4:  BSF    03.5
00B5:  BCF    06.3
00B6:  BCF    03.5
00B7:  BCF    06.3
....................                   delay_ms(200); 
00B8:  MOVLW  C8
00B9:  MOVWF  22
00BA:  CALL   004
....................                    
....................                   output_high(PIN_B3); 
00BB:  BSF    03.5
00BC:  BCF    06.3
00BD:  BCF    03.5
00BE:  BSF    06.3
....................                   delay_ms(100); 
00BF:  MOVLW  64
00C0:  MOVWF  22
00C1:  CALL   004
....................                   output_low(PIN_B3); 
00C2:  BSF    03.5
00C3:  BCF    06.3
00C4:  BCF    03.5
00C5:  BCF    06.3
....................                   delay_ms(200); 
00C6:  MOVLW  C8
00C7:  MOVWF  22
00C8:  CALL   004
....................                   break; 
00C9:  GOTO   14D
....................                    
....................          case 5:  output_high(PIN_B3);           // S.O.S (save our souls) 
00CA:  BSF    03.5
00CB:  BCF    06.3
00CC:  BCF    03.5
00CD:  BSF    06.3
....................                   delay_ms(50); 
00CE:  MOVLW  32
00CF:  MOVWF  22
00D0:  CALL   004
....................                   output_low(PIN_B3); 
00D1:  BSF    03.5
00D2:  BCF    06.3
00D3:  BCF    03.5
00D4:  BCF    06.3
....................                   delay_ms(50); 
00D5:  MOVLW  32
00D6:  MOVWF  22
00D7:  CALL   004
....................                   output_high(PIN_B3); 
00D8:  BSF    03.5
00D9:  BCF    06.3
00DA:  BCF    03.5
00DB:  BSF    06.3
....................                   delay_ms(50); 
00DC:  MOVLW  32
00DD:  MOVWF  22
00DE:  CALL   004
....................                   output_low(PIN_B3); 
00DF:  BSF    03.5
00E0:  BCF    06.3
00E1:  BCF    03.5
00E2:  BCF    06.3
....................                   delay_ms(50); 
00E3:  MOVLW  32
00E4:  MOVWF  22
00E5:  CALL   004
....................                   output_high(PIN_B3); 
00E6:  BSF    03.5
00E7:  BCF    06.3
00E8:  BCF    03.5
00E9:  BSF    06.3
....................                   delay_ms(50); 
00EA:  MOVLW  32
00EB:  MOVWF  22
00EC:  CALL   004
....................                   output_low(PIN_B3); 
00ED:  BSF    03.5
00EE:  BCF    06.3
00EF:  BCF    03.5
00F0:  BCF    06.3
....................                   delay_ms(50); 
00F1:  MOVLW  32
00F2:  MOVWF  22
00F3:  CALL   004
....................                                    
....................                   output_high(PIN_B3); 
00F4:  BSF    03.5
00F5:  BCF    06.3
00F6:  BCF    03.5
00F7:  BSF    06.3
....................                   delay_ms(150); 
00F8:  MOVLW  96
00F9:  MOVWF  22
00FA:  CALL   004
....................                   output_low(PIN_B3); 
00FB:  BSF    03.5
00FC:  BCF    06.3
00FD:  BCF    03.5
00FE:  BCF    06.3
....................                   delay_ms(150); 
00FF:  MOVLW  96
0100:  MOVWF  22
0101:  CALL   004
....................                   output_high(PIN_B3); 
0102:  BSF    03.5
0103:  BCF    06.3
0104:  BCF    03.5
0105:  BSF    06.3
....................                   delay_ms(150); 
0106:  MOVLW  96
0107:  MOVWF  22
0108:  CALL   004
....................                   output_low(PIN_B3); 
0109:  BSF    03.5
010A:  BCF    06.3
010B:  BCF    03.5
010C:  BCF    06.3
....................                   delay_ms(150); 
010D:  MOVLW  96
010E:  MOVWF  22
010F:  CALL   004
....................                   output_high(PIN_B3); 
0110:  BSF    03.5
0111:  BCF    06.3
0112:  BCF    03.5
0113:  BSF    06.3
....................                   delay_ms(150); 
0114:  MOVLW  96
0115:  MOVWF  22
0116:  CALL   004
....................                   output_low(PIN_B3); 
0117:  BSF    03.5
0118:  BCF    06.3
0119:  BCF    03.5
011A:  BCF    06.3
....................                   delay_ms(150); 
011B:  MOVLW  96
011C:  MOVWF  22
011D:  CALL   004
....................                    
....................                   output_high(PIN_B3); 
011E:  BSF    03.5
011F:  BCF    06.3
0120:  BCF    03.5
0121:  BSF    06.3
....................                   delay_ms(50); 
0122:  MOVLW  32
0123:  MOVWF  22
0124:  CALL   004
....................                   output_low(PIN_B3); 
0125:  BSF    03.5
0126:  BCF    06.3
0127:  BCF    03.5
0128:  BCF    06.3
....................                   delay_ms(50); 
0129:  MOVLW  32
012A:  MOVWF  22
012B:  CALL   004
....................                   output_high(PIN_B3); 
012C:  BSF    03.5
012D:  BCF    06.3
012E:  BCF    03.5
012F:  BSF    06.3
....................                   delay_ms(50); 
0130:  MOVLW  32
0131:  MOVWF  22
0132:  CALL   004
....................                   output_low(PIN_B3); 
0133:  BSF    03.5
0134:  BCF    06.3
0135:  BCF    03.5
0136:  BCF    06.3
....................                   delay_ms(50); 
0137:  MOVLW  32
0138:  MOVWF  22
0139:  CALL   004
....................                   output_high(PIN_B3); 
013A:  BSF    03.5
013B:  BCF    06.3
013C:  BCF    03.5
013D:  BSF    06.3
....................                   delay_ms(50); 
013E:  MOVLW  32
013F:  MOVWF  22
0140:  CALL   004
....................                   output_low(PIN_B3); 
0141:  BSF    03.5
0142:  BCF    06.3
0143:  BCF    03.5
0144:  BCF    06.3
....................                   delay_ms(1000); 
0145:  MOVLW  04
0146:  MOVWF  21
0147:  MOVLW  FA
0148:  MOVWF  22
0149:  CALL   004
014A:  DECFSZ 21,F
014B:  GOTO   147
....................                    
....................                   break; 
014C:  GOTO   14D
....................       } 
....................    } 
014D:  GOTO   051
.................... } 
014E:  SLEEP

Configuration Fuses:
   Word  1: 3F10   NOWDT PUT NOPROTECT NOBROWNOUT NOMCLR NOLVP INTRC_IO NOCPD
