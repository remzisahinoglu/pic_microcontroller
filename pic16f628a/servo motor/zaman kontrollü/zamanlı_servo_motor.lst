CCS PCM C Compiler, Version 4.106, 14749               13-Mar-11 18:07

               Filename: D:\ram\microcontrol\picmicro\pic c\pic uygulama\pic16f628a\servo motor\zaman kontrollü\zamanlý_servo_motor.lst

               ROM used: 291 words (14%)
                         Largest free fragment is 1757
               RAM used: 7 (3%) at main() level
                         8 (4%) worst case
               Stack:    1 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   02D
0003:  NOP
.................... /* 
.................... Project : servo kontrol 
.................... Version : 1.0 
.................... Date    : 12.03.2011 
.................... Author  : Remzi ÞAHÝNOÐLU 
.................... Comment : servo motor kullanýmýný ogrenmek 
....................  
.................... periyod 20ms, duty 600us ile 2000us arasýnda deðiþebilir. 
....................  
.................... duty    konum (derece) 
.................... ----    ----- 
.................... 600us   -90 
.................... 1500us  0 
.................... 2000us  +90 
....................  
.................... */ 
....................  
.................... #if defined (__PCM__) 
.................... #include <16F628A.h> 
.................... //////// Standard Header file for the PIC16F628A device //////////////// 
.................... #device PIC16F628A 
.................... #list 
....................  
.................... #use delay(clock=4000000) 
0004:  MOVLW  21
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   018
000A:  MOVLW  01
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  4A
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  GOTO   016
0016:  DECFSZ 00,F
0017:  GOTO   00A
0018:  RETURN
0019:  MOVLW  12
001A:  SUBWF  22,F
001B:  BTFSS  03.0
001C:  GOTO   02C
001D:  MOVLW  22
001E:  MOVWF  04
001F:  BCF    03.7
0020:  MOVLW  FC
0021:  ANDWF  00,F
0022:  BCF    03.0
0023:  RRF    00,F
0024:  RRF    00,F
0025:  MOVF   00,W
0026:  BTFSC  03.2
0027:  GOTO   02C
0028:  GOTO   02A
0029:  NOP
002A:  DECFSZ 00,F
002B:  GOTO   029
002C:  RETURN
.................... #fuses NOWDT,PUT,NOLVP,NOBROWNOUT,NOMCLR,INTRC_IO,NOPROTECT 
.................... #endif 
....................  
.................... #byte PORTB = 0x06 
.................... #byte PORTA = 0x05 
....................  
.................... char i=0; 
....................  
.................... void main() 
.................... { 
002D:  CLRF   04
002E:  BCF    03.7
002F:  MOVLW  1F
0030:  ANDWF  03,F
0031:  CLRF   20
0032:  MOVLW  07
0033:  MOVWF  1F
....................  
....................    set_tris_a (0x03); 
0034:  MOVLW  03
0035:  TRIS   5
....................    set_tris_b (0x00); 
0036:  MOVLW  00
0037:  TRIS   6
....................    output_b(0); 
0038:  BSF    03.5
0039:  CLRF   06
003A:  BCF    03.5
003B:  CLRF   06
....................  
....................     
....................    while(TRUE) 
....................    { 
....................       while(i<100)      // center 
....................       { 
003C:  MOVF   20,W
003D:  SUBLW  63
003E:  BTFSS  03.0
003F:  GOTO   05E
....................          output_high(PIN_B3); 
0040:  BSF    03.5
0041:  BCF    06.3
0042:  BCF    03.5
0043:  BSF    06.3
....................          delay_us(1500); 
0044:  MOVLW  01
0045:  MOVWF  21
0046:  CALL   004
0047:  MOVLW  02
0048:  MOVWF  21
0049:  MOVLW  F7
004A:  MOVWF  22
004B:  CALL   019
004C:  DECFSZ 21,F
004D:  GOTO   049
....................          output_low(PIN_B3); 
004E:  BSF    03.5
004F:  BCF    06.3
0050:  BCF    03.5
0051:  BCF    06.3
....................          delay_us(18500); 
0052:  MOVLW  12
0053:  MOVWF  21
0054:  CALL   004
0055:  MOVLW  02
0056:  MOVWF  21
0057:  MOVLW  F7
0058:  MOVWF  22
0059:  CALL   019
005A:  DECFSZ 21,F
005B:  GOTO   057
....................          i++; 
005C:  INCF   20,F
....................       } 
005D:  GOTO   03C
....................       i=0; 
005E:  CLRF   20
....................       while(i<100)      // 30 degree left 
....................       { 
005F:  MOVF   20,W
0060:  SUBLW  63
0061:  BTFSS  03.0
0062:  GOTO   081
....................          output_high(PIN_B3); 
0063:  BSF    03.5
0064:  BCF    06.3
0065:  BCF    03.5
0066:  BSF    06.3
....................          delay_us(1333); 
0067:  MOVLW  01
0068:  MOVWF  21
0069:  CALL   004
006A:  MOVLW  03
006B:  MOVWF  21
006C:  MOVLW  6C
006D:  MOVWF  22
006E:  CALL   019
006F:  DECFSZ 21,F
0070:  GOTO   06C
....................          output_low(PIN_B3); 
0071:  BSF    03.5
0072:  BCF    06.3
0073:  BCF    03.5
0074:  BCF    06.3
....................          delay_us(18667); 
0075:  MOVLW  12
0076:  MOVWF  21
0077:  CALL   004
0078:  MOVLW  17
0079:  MOVWF  21
007A:  MOVLW  1A
007B:  MOVWF  22
007C:  CALL   019
007D:  DECFSZ 21,F
007E:  GOTO   07A
....................          i++; 
007F:  INCF   20,F
....................       } 
0080:  GOTO   05F
....................       i=0; 
0081:  CLRF   20
....................       while(i<100)      // 30 degree right 
....................       { 
0082:  MOVF   20,W
0083:  SUBLW  63
0084:  BTFSS  03.0
0085:  GOTO   0A4
....................          output_high(PIN_B3); 
0086:  BSF    03.5
0087:  BCF    06.3
0088:  BCF    03.5
0089:  BSF    06.3
....................          delay_us(1667); 
008A:  MOVLW  01
008B:  MOVWF  21
008C:  CALL   004
008D:  MOVLW  17
008E:  MOVWF  21
008F:  MOVLW  1A
0090:  MOVWF  22
0091:  CALL   019
0092:  DECFSZ 21,F
0093:  GOTO   08F
....................          output_low(PIN_B3); 
0094:  BSF    03.5
0095:  BCF    06.3
0096:  BCF    03.5
0097:  BCF    06.3
....................          delay_us(18333); 
0098:  MOVLW  12
0099:  MOVWF  21
009A:  CALL   004
009B:  MOVLW  03
009C:  MOVWF  21
009D:  MOVLW  6C
009E:  MOVWF  22
009F:  CALL   019
00A0:  DECFSZ 21,F
00A1:  GOTO   09D
....................          i++; 
00A2:  INCF   20,F
....................       } 
00A3:  GOTO   082
....................       i=0; 
00A4:  CLRF   20
....................       while(i<100)      // 45 degree left 
....................       { 
00A5:  MOVF   20,W
00A6:  SUBLW  63
00A7:  BTFSS  03.0
00A8:  GOTO   0C3
....................          output_high(PIN_B3); 
00A9:  BSF    03.5
00AA:  BCF    06.3
00AB:  BCF    03.5
00AC:  BSF    06.3
....................          delay_us(1250); 
00AD:  MOVLW  01
00AE:  MOVWF  21
00AF:  CALL   004
00B0:  MOVLW  FA
00B1:  MOVWF  22
00B2:  CALL   019
....................          output_low(PIN_B3); 
00B3:  BSF    03.5
00B4:  BCF    06.3
00B5:  BCF    03.5
00B6:  BCF    06.3
....................          delay_us(18750); 
00B7:  MOVLW  12
00B8:  MOVWF  21
00B9:  CALL   004
00BA:  MOVLW  03
00BB:  MOVWF  21
00BC:  MOVLW  F7
00BD:  MOVWF  22
00BE:  CALL   019
00BF:  DECFSZ 21,F
00C0:  GOTO   0BC
....................          i++; 
00C1:  INCF   20,F
....................       } 
00C2:  GOTO   0A5
....................       i=0; 
00C3:  CLRF   20
....................       while(i<100)      // 45 degree right 
....................       { 
00C4:  MOVF   20,W
00C5:  SUBLW  63
00C6:  BTFSS  03.0
00C7:  GOTO   0E2
....................          output_high(PIN_B3); 
00C8:  BSF    03.5
00C9:  BCF    06.3
00CA:  BCF    03.5
00CB:  BSF    06.3
....................          delay_us(1750); 
00CC:  MOVLW  01
00CD:  MOVWF  21
00CE:  CALL   004
00CF:  MOVLW  03
00D0:  MOVWF  21
00D1:  MOVLW  F7
00D2:  MOVWF  22
00D3:  CALL   019
00D4:  DECFSZ 21,F
00D5:  GOTO   0D1
....................          output_low(PIN_B3); 
00D6:  BSF    03.5
00D7:  BCF    06.3
00D8:  BCF    03.5
00D9:  BCF    06.3
....................          delay_us(18250); 
00DA:  MOVLW  12
00DB:  MOVWF  21
00DC:  CALL   004
00DD:  MOVLW  FA
00DE:  MOVWF  22
00DF:  CALL   019
....................          i++; 
00E0:  INCF   20,F
....................       } 
00E1:  GOTO   0C4
....................       i=0; 
00E2:  CLRF   20
....................       while(i<100)      // 60 degree left 
....................       { 
00E3:  MOVF   20,W
00E4:  SUBLW  63
00E5:  BTFSS  03.0
00E6:  GOTO   101
....................          output_high(PIN_B3); 
00E7:  BSF    03.5
00E8:  BCF    06.3
00E9:  BCF    03.5
00EA:  BSF    06.3
....................          delay_us(1167); 
00EB:  MOVLW  01
00EC:  MOVWF  21
00ED:  CALL   004
00EE:  MOVLW  A7
00EF:  MOVWF  22
00F0:  CALL   019
....................          output_low(PIN_B3); 
00F1:  BSF    03.5
00F2:  BCF    06.3
00F3:  BCF    03.5
00F4:  BCF    06.3
....................          delay_us(18833); 
00F5:  MOVLW  12
00F6:  MOVWF  21
00F7:  CALL   004
00F8:  MOVLW  07
00F9:  MOVWF  21
00FA:  MOVLW  74
00FB:  MOVWF  22
00FC:  CALL   019
00FD:  DECFSZ 21,F
00FE:  GOTO   0FA
....................          i++; 
00FF:  INCF   20,F
....................       } 
0100:  GOTO   0E3
....................       i=0; 
0101:  CLRF   20
....................       while(i<100)      // 60 degree right 
....................       { 
0102:  MOVF   20,W
0103:  SUBLW  63
0104:  BTFSS  03.0
0105:  GOTO   120
....................          output_high(PIN_B3); 
0106:  BSF    03.5
0107:  BCF    06.3
0108:  BCF    03.5
0109:  BSF    06.3
....................          delay_us(1833); 
010A:  MOVLW  01
010B:  MOVWF  21
010C:  CALL   004
010D:  MOVLW  07
010E:  MOVWF  21
010F:  MOVLW  74
0110:  MOVWF  22
0111:  CALL   019
0112:  DECFSZ 21,F
0113:  GOTO   10F
....................          output_low(PIN_B3); 
0114:  BSF    03.5
0115:  BCF    06.3
0116:  BCF    03.5
0117:  BCF    06.3
....................          delay_us(18167); 
0118:  MOVLW  12
0119:  MOVWF  21
011A:  CALL   004
011B:  MOVLW  A7
011C:  MOVWF  22
011D:  CALL   019
....................          i++; 
011E:  INCF   20,F
....................       } 
011F:  GOTO   102
....................       i=0; 
0120:  CLRF   20
....................    }   
0121:  GOTO   03C
.................... } 
0122:  SLEEP

Configuration Fuses:
   Word  1: 3F10   NOWDT PUT NOPROTECT NOBROWNOUT NOMCLR NOLVP INTRC_IO NOCPD
