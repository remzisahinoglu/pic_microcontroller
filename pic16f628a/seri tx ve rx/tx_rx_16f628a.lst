CCS PCM C Compiler, Version 4.106, 14749               07-May-11 13:10

               Filename: D:\ram\parellel robot\elektronik\kumandadan xyz kontrol\test\seri tx ve rx\tx_rx_16f628a.lst

               ROM used: 74 words (4%)
                         Largest free fragment is 1974
               RAM used: 6 (3%) at main() level
                         6 (3%) worst case
               Stack:    0 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   004
0003:  NOP
.................... /////////////////////////////////////////////////////////////////////////////// 
.................... ////                    rx_tx_kullanýmý.C                                  //// 
.................... ////                                                                       //// 
.................... ////  Bu porgram her iki pic den rx ve tx pinlerinin kullanýlmasýyla       //// 
.................... ////  ilgilidir.                                                           //// 
.................... ////                                                                       //// 
....................  
.................... /////////////////////////////////////////////////////////////////////////////// 
.................... ////  YAZAN: Remzi ÞAHÝNOÐLU                                               //// 
.................... ////  TARÝH: 07.05.2011                                                    //// 
.................... ////                                                                       //// 
.................... /////////////////////////////////////////////////////////////////////////////// 
....................  
.................... #if defined(__PCM__) 
.................... #include <16F628A.h> 
.................... //////// Standard Header file for the PIC16F628A device //////////////// 
.................... #device PIC16F628A 
.................... #list 
....................  
.................... #use delay(clock=4000000) 
.................... #fuses XT, MCLR, PUT, NOWDT, NOLVP, NOBROWNOUT, NOPROTECT 
.................... #use rs232 (baud=9600, xmit=PIN_B2, rcv=PIN_B1, parity=N, stop=1) 
.................... #endif 
....................  
.................... //#device PIC16F628A 
....................  
....................  
.................... void main() 
.................... { 
0004:  CLRF   04
0005:  BCF    03.7
0006:  MOVLW  1F
0007:  ANDWF  03,F
0008:  MOVLW  19
0009:  BSF    03.5
000A:  MOVWF  19
000B:  MOVLW  A6
000C:  MOVWF  18
000D:  MOVLW  90
000E:  BCF    03.5
000F:  MOVWF  18
0010:  MOVLW  07
0011:  MOVWF  1F
....................  
....................    setup_timer_1(T1_DISABLED); 
0012:  CLRF   10
....................    setup_timer_2(T2_DISABLED,0,1); 
0013:  MOVLW  00
0014:  MOVWF  78
0015:  MOVWF  12
0016:  MOVLW  00
0017:  BSF    03.5
0018:  MOVWF  12
....................    setup_CCP1(CCP_OFF); 
0019:  BSF    06.3
001A:  BCF    03.5
001B:  CLRF   17
....................     
....................  
....................    output_low(PIN_B0); 
001C:  BSF    03.5
001D:  BCF    06.0
001E:  BCF    03.5
001F:  BCF    06.0
....................    output_low(PIN_B3); 
0020:  BSF    03.5
0021:  BCF    06.3
0022:  BCF    03.5
0023:  BCF    06.3
....................    output_low(PIN_B4); 
0024:  BSF    03.5
0025:  BCF    06.4
0026:  BCF    03.5
0027:  BCF    06.4
....................    output_low(PIN_B5); 
0028:  BSF    03.5
0029:  BCF    06.5
002A:  BCF    03.5
002B:  BCF    06.5
....................    output_low(PIN_B6); 
002C:  BSF    03.5
002D:  BCF    06.6
002E:  BCF    03.5
002F:  BCF    06.6
....................    output_low(PIN_B7); 
0030:  BSF    03.5
0031:  BCF    06.7
0032:  BCF    03.5
0033:  BCF    06.7
....................     
....................  
....................    
....................    enable_interrupts(GLOBAL); 
0034:  MOVLW  C0
0035:  IORWF  0B,F
....................     
....................    while(TRUE) 
....................    { 
....................       if(input(PIN_A0)==0) 
0036:  BSF    03.5
0037:  BSF    05.0
0038:  BCF    03.5
0039:  BTFSC  05.0
003A:  GOTO   03F
....................       { 
....................          putc(0x04); 
003B:  MOVLW  04
003C:  BTFSS  0C.4
003D:  GOTO   03C
003E:  MOVWF  19
....................       } 
....................       if(input(PIN_A1)==0) 
003F:  BSF    03.5
0040:  BSF    05.1
0041:  BCF    03.5
0042:  BTFSC  05.1
0043:  GOTO   048
....................       { 
....................          putc(0x08); 
0044:  MOVLW  08
0045:  BTFSS  0C.4
0046:  GOTO   045
0047:  MOVWF  19
....................       } 
....................  
....................    } 
0048:  GOTO   036
.................... } 
0049:  SLEEP

Configuration Fuses:
   Word  1: 3F21   XT NOWDT PUT NOPROTECT NOBROWNOUT MCLR NOLVP NOCPD
